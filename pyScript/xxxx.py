#MODULES
import win32api #GetAsyncKeyState is not detected
import time #only for delay
import winsound
from serial import Serial #arduino atmega32u4 ;)



#variables#
arduino = Serial('COM3', 9600)

def mouse_move(x, y):
    if x < 0: # 255 SINIR Yani 255 veriyorsa 1 veriyor demektir.
        x = x + 256
    if y < 0:
        y = y + 256
    pax = [x,y]
    arduino.write(pax)


                                                     
                                              
                                                            


#M2- delay (0.0000011) ve sensivity = 0.6
xm2 = [0,0,0,0,0]
ym2 = [2,3,4,4,4]

#LR- delay (0.045) ve sensivity 0.7 (%90)
lrx = [-2,-3,-2,-2,-3,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,0,1,1,4,5,5,5,5,4,5,5,4,4,3,2,0,-1,-1,-1,-2,-2,-2,-2,-2,-2,-3,-3,-3,-3,-3,-3,-3,-4,-3,-3,-4,-4,-3,-3,-3,-3,-2,-3,-3,-2,-3,-2,-2,-1,0,0,0,0,0,7,7,8,8,7,7,8,7,7,8,7,7]
lry = [7,8,7,7,8,7,7,8,7,7,7,7,6,6,6,6,4,4,4,3,2,2,2,2,2,2,2,2,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,1,0,0,1]

#AK- delay (0.023) ve sensivity 0.7 
ak2y = [6,6,6,6,6,5,5,5,5,5,6,6,6,6,6,6,6,6,5,5,5,5,5,4,4,4,4,3,4,4,4,4,3,3,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,2,2,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,4,5,5,5,4,4,5,5,5,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,3,2,2,2,3,3,3,3,3,3,3,4,5,5,5,5,4,4,4,4,3,4,4,4,5,5,4,5,5,5,5]
ak2x = [-4,-4,-2,-2,0,0,-2,-4,-5,-6,-6,-6,-6,-6,-6,-5,-5,-3,-2,-1,0,0,2,2,2,2,2,2,3,3,4,4,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,4,4,4,4,4,4,4,3,3,3,3,2,1,1,0,-1,-1,-1,-2,-2,-2,-3,-4,-4,-4,-4,-5,-5,-6,-6,-6,-5,-5,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-6,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-5,-5,-4,-4,-4,-3,-2,-2,-2,-2,1,1,1,2,3,4,4,5,5,5,6,6,6,6,6,6,6,6,6,6,7,8,8,8,8]

mp5x = [0,0,0,0,0,0,0,0,0,1,1,1,3,4,4,4,3,4,4,4,4,4,4,3,3,3,2,2,-1,-1,-2,-2,-3,-3,-3,-2,-3,-3,-3,-2,-2,-1,-1,-1,0,0,0,0,0,0,0,0,2,2,2,2,2,2,3,3,3,3,2,2,2,2,2,2,0,-1,-1,-1,0,-1,-1,-1,0,-1,-1,-1,-1,-1,-2,-2,-1,-1,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,-2,-2,-1,-1,-2,-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1]
mp5y = [3,3,4,4,4,5,5,4,4,4,4,5,5,5,4,4,4,4,3,3,4,3,3,3,3,3,2,2,2,2,1,1,2,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

thmpx = [-1,-1,-1,-1,-2,-1,-1,-1,0,1,0,1,1,1,2,2,1,1,2,2,2,2,1,1,0,1,0,0,-1,-1,-2,-2,-2,-2,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,2,2,2,2,2,1,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
thmpy = [4,4,5,5,5,5,4,4,5,5,5,4,5,5,4,4,4,4,4,4,4,4,3,3,2,2,2,2,2,2,2,2,2,1,1,2,2,2,2,1,2,2,1,1,2,2,1,1,2,2,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1]

akx2=[-2,-5,-6,-9,0,1,1,1,-3,-5,-7,-20,-3,-6,-7,-15,0,0,0,0,1,3,3,6,2,3,5,6,3,4,6,7,3,5,7,11,3,5,7,10,8,8,8,8,8,8,5,6,4,4,4,4,0,0,0,0,-1,-2,-2,-2,-2,-4,-5,-7,-5,-4,-5,-10,-3,-5,-7,-8,-4,-5,-7,-9,-4,-7,-8,-12,-5,-5,-6,-9,-7,-6,-6,-8,-6,-5,-6,-6,-5,-7,-8,-14,1,2,2,2,3,4,6,6,4,6,6,8,3,6,6,6,3,5,7,10,12,4,4,5]
aky2=[3,6,10,12,6,7,8,10,6,7,8,10,4,5,7,8,2,5,6,10,6,7,6,6,2,3,4,4,3,3,3,3,2,3,4,4,2,2,3,3,3,2,1,0,2,4,5,6,2,3,3,3,2,4,7,10,2,2,2,4,3,5,6,8,7,5,6,8,3,4,6,7,3,5,5,6,6,6,3,3,2,2,3,2,3,0,0,0,1,2,3,6,1,2,3,4,1,3,4,6,2,2,3,3,2,4,6,8,2,4,6,8,1,2,2,2,1,3,4,6]

akpy=[3,6,9,12,3,6,7,10,3,5,7,10,3,4,7,8,2,5,6,8,2,4,4,6,2,3,4,4,1,2,2,3,1,2,3,4,1,2,2,3,0,0,0,0,2,4,5,6,2,3,3,3,2,4,7,10,2,2,2,4,3,5,6,8,7,5,6,8,2,4,6,7,2,3,4,5,2,2,4,4,0,1,1,2,0,0,0,0,1,2,3,6,1,2,3,4,1,3,4,6,2,2,3,3,2,4,6,8,2,4,6,8,1,2,2,2,1,3,4,6]
akpx=[-2,-4,-6,-8,0,1,2,2,-3,-6,-9,-13,-3,-6,-7,-11,0,0,0,0,1,3,3,6,2,3,5,6,3,4,6,7,3,5,7,11,3,5,7,10,2,4,6,8,2,4,6,8,2,4,4,5,0,0,0,0,-1,-2,-2,-2,-2,-4,-6,-8,-6,-4,-6,-12,-3,-5,-7,-8,-4,-5,-7,-9,-4,-7,-8,-12,-3,-5,-6,-9,-2,-4,-6,-8,-1,-2,-4,-6,-1,-2,-3,-3,1,2,2,2,3,4,6,8,4,6,10,12,3,6,9,12,3,5,12,12,2,2,3,4]

akx=[-1,-5,-6,-9,0,1,1,1,-3,-5,-7,-20,-3,-6,-7,-15,0,0,0,0,1,3,3,6,2,3,5,6,3,4,6,7,3,5,7,11,3,5,7,10,8,8,8,8,8,8,5,6,4,4,4,4,0,0,0,0,-1,-2,-2,-2,-2,-4,-5,-7,-5,-4,-5,-10,-3,-5,-7,-8,-4,-5,-7,-9,-4,-7,-8,-12,-5,-5,-6,-9,-7,-6,-6,-8,-6,-5,-6,-6,-5,-7,-8,-14,1,2,2,2,3,4,6,6,4,6,6,8,3,6,6,6,3,5,7,10,12,4,4,5]
aky=[3,6,10,12,6,7,8,10,6,7,8,10,4,5,7,8,2,5,6,10,6,7,6,6,2,3,4,4,3,3,3,3,2,3,4,4,2,2,3,3,3,2,1,0,2,4,5,6,2,3,3,3,2,4,7,10,2,2,2,4,3,5,6,8,7,5,6,8,3,4,6,7,3,5,5,6,6,6,3,3,2,2,3,2,3,0,0,0,1,2,3,6,1,2,3,4,1,3,4,6,2,2,3,3,2,4,6,8,2,4,6,8,1,2,2,2,1,3,4,6]

#New Recoil Tables

sarx = [0,0]
sary = [8,7]
sardelay=[0.027,0.027]

mp5x = [0,0,0,0,0,0,0,0,1,1,1,1,4,5,5,5,5,5,5,4,5,5,5,4,3,3,3,3,-1,-2,-2,-2,-3,-3,-4,-4,-4,-4,-3,-3,-2,-2,-2,-1,0,0,-3,-2,-2,-2,-2,-1,0,0,0,0,0,0,0,0,2,2,3,3,3,3,3,3,2,2,3,3,3,3,3,4,4,3,3,3,3,3,2,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-2,-2,-1,-2,-2,-2,-2,-2,-3,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-2,-2,-2,-1,-1,-1,-1,-2]
mp5y = [8,5,5,5,5,5,6,6,5,6,6,5,6,6,5,5,5,5,4,4,4,4,4,4,3,3,3,3,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,1,2,1,1,2,2,2,1,2,1,1,1,2,1,1,1,2,1,1,1,1,1,1,2,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
mp5delay


thompson2x=[-2,-2,-2,-2,-2,-1,-1,0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,2,2,3,3,2,2,2,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
thompson2y=[11,6,6,6,6,6,5,6,6,6,5,6,6,5,5,5,5,5,5,5,5,4,4,3,3,2,2,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,1,2,2,1,1,2,1,1,1,2,2,1,1,2,1,1,1,2,2,1,1,2,1,1,1,2,2,1,1]
thompsondelay=[0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,0.029,]


testlrx=[-1,-1,-1,-1,-1,-1,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,0,1,1,4,5,5,5,5,4,5,5,4,4,3,3,0,-1,-1,-1,-2,-2,-2,-2,-2,-2,-2,-3,-3,-3,-3,-3,-3,-3,-3,-4,-3,-3,-4,-4,-3,-3,-3,-3,-2,-3,-3,-2,-3,-2,-2,-1,0,0,0,0,0,7,7,8,8,7,7,8,7,7,8,7,7]
testlry=[8,9,9,9,9,8,8,8,8,8,8,9,9,9,9,4,4,4,4,4,3,2,2,2,2,2,2,2,2,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,0,1,1,0,0,0,1,0,1,1,0,0,1,0,1,1,0,0,1,0,1,1,0,0,1,0,0,1]
lrdelay

ak = False
lr = False
sar = False
m2 = False
mp5 = False
thommy = False

frequency = 1000
soundTime = 200

def baslangic():
    global ak
    global lr
    global sar
    global m2
    global mp5
    global thommy

    def doak():
        while ak == True:
            if win32api.GetAsyncKeyState(0x24) < 0:
                time.sleep(0.5)
                print("DISCONNECTING...")
                baslangic()
                break
            for i in range(len(akx)):
                if win32api.GetAsyncKeyState(0x01) < 0:
                    mouse_move(akx[i],aky[i]) 
                    time.sleep(0.02)        
                else:
                    break
    def dolr():
        while lr ==True:
            if win32api.GetAsyncKeyState(0x24) < 0:
                time.sleep(0.5)
                print("DISCONNECTING...")
                winsound.Beep(frequency, soundTime)
                baslangic()
                break
            for i in range(len(lrx)):  #this path for changing recoil table#
                if win32api.GetAsyncKeyState(0x01) < 0 and win32api.GetAsyncKeyState(0x02) <0:
                    mouse_move(testlrx[i],testlry[i]) #this path for changing recoil table#
                    time.sleep(lrdelay[i])
                    print(i)
                else:
                    break
    def dosar():
        while sar == True:
            if win32api.GetAsyncKeyState(0x24) < 0: # Tab button for open menu ( you can change it)
                time.sleep(0.5)
                print("DISCONNECTING...")
                baslangic()
                break
            for i in range(len(sarx)):  #
                if win32api.GetAsyncKeyState(0x01) < 0 and win32api.GetAsyncKeyState(0x02) <0:
                    mouse_move(sarx[i],sary[i]) #this path for changing recoil table#
                    time.sleep(sardelay[i])
                else:
                    break
    def dom2():
        while m2 == True:
            if win32api.GetAsyncKeyState(0x24) < 0:
                time.sleep(0.5)
                print("DISCONNECTING...")
                baslangic()
                break
            for i in range(len(xm2)):
                if win32api.GetAsyncKeyState(0x01) < 0 and win32api.GetAsyncKeyState(0x02) <0:
                    mouse_move(xm2[i],ym2[i])
                    time.sleep(0.0000011)
                else:
                    break
    def domp5():
        while mp5 == True:
            if win32api.GetAsyncKeyState(0x24) < 0:
                time.sleep(0.5)
                print("DISCONNECTING...")
                baslangic()
                break
            for i in range(len(mp5x)):
                if win32api.GetAsyncKeyState(0x01) < 0 and win32api.GetAsyncKeyState(0x02) < 0:
                    mouse_move(mp5x[i],mp5y[i])
                    time.sleep(0.025)
                else:
                    break
    def dothommy():
        while thommy == True:
            if win32api.GetAsyncKeyState(0x24) < 0:
                time.sleep(0.5)
                print("DISCONNECTING...")
                baslangic()
                break
            for i in range (len(thmpx)):
                if win32api.GetAsyncKeyState(0x01) < 0 and win32api.GetAsyncKeyState(0x02) <0:
                    mouse_move(thmpx[i],thmpy[i])
                    time.sleep(0.020)
                else:
                    break

    baslat = input("CHOOSE YOUR WEAPON ...:")
    if baslat == "1":
        print("AK IS READY TO USE!")
        ak = True
        doak()
    elif baslat == "2":
        print("LR IS READY TO USE!")
        lr = True
        dolr()
    elif baslat =="3":
        print("SAR IS READY TO USE!")
        sar = True
        dosar()
    elif baslat == "4":
        print("M2 IS READY TO USE!")
        m2 = True
        dom2() 
    elif baslat == "5":
        print("MP5 IS READY TO USE!")
        mp5 = True
        domp5()
    elif baslat == "6":
        print("THOMPSON IS READY TO USE!")
        thommy = True
        dothommy()
    else:
        print("ERROR!")
    




print("     ▄  ▄███▄      ▄   ████▄    ▄▄▄▄▄    ▄  █   ▄   ") 
print("▀▄   █ █▀   ▀      █  █   █   █     ▀▄ █   █    █ ")
print("  █ ▀  ██▄▄    ██   █ █   █ ▄  ▀▀▀▀▄   ██▀▀█ █   █ ")
print(" ▄ █   █▄   ▄▀ █ █  █ ▀████  ▀▄▄▄▄▀    █   █ █   █ ")
print("█   ▀▄ ▀███▀   █  █ █                     █  █▄ ▄█ ")
print(" ▀             █   ██                    ▀    ▀▀▀  ")                                                                                                           
print(" ")
print("AK = 1   ~~   LR = 2   ~~   SAR = 3   ~~   M2 = 4   ~~   MP5 = 5   ~~   THOMPSON = 6")
print("WELCOME TO HUMANIZED RECOIL CONTROL SYSTEM!")
baslangic()




 




                                                   















